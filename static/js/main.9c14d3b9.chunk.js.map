{"version":3,"sources":["components/calendar/svgs/trash-alt.svg","components/calendar/svgs/plus.svg","components/calendar/Conditions.js","components/calendar/Forecast.js","components/calendar/ReminderDialog.js","components/calendar/Day.js","components/calendar/index.js","App.js","app/actions/index.js","app/reducers/initialDate.js","app/store.js","app/reducers/reminders.js","serviceWorker.js","index.js"],"names":["module","exports","Conditions","props","className","responseObj","cod","weather","description","Forecast","useState","setResponseObj","city","uriEncodedCity","encodeURIComponent","style","fontSize","type","onClick","event","preventDefault","fetch","method","then","response","json","catch","err","console","log","ReminderDialog","handleClickOpen","setState","open","handleClose","onSubmit","handleSubmit","state","reminderTitle","reminderCity","reminderDate","reminderStartTime","reminderCategory","__handleTitleChange","target","value","__handleCityChange","__handleDateChange","__handleStartTimeChange","__handleCategoryChange","bind","src","PlusIcon","alt","this","Dialog","onClose","aria-labelledby","DialogTitle","id","action","DialogContent","TextField","autoFocus","margin","label","onChange","fullWidth","placeholder","showDateField","InputLabelProps","shrink","maxLength","InputLabel","Select","labelId","displayEmpty","MenuItem","DialogActions","Button","color","submitText","React","Component","Day","onDayClick","day","addReminder","newReminder","fullDate","format","title","date","startTime","category","editReminder","index","deleteReminder","reminder","reminders","key","currentDay","TrashIcon","e","deleteAllReminders","classes","root","map","String","height","r","Calendar","weekdaysShortName","moment","weekdaysShort","lastDayOfMonth","initialDate","endOf","currentDayF","parseInt","month","year","firstDayOfMonth","startOf","makeBlanks","blanks","i","d","subtract","unshift","makeDays","daysInMonth","dateNow","push","selectedDay","deleteAllDayReminders","makeTableCalendar","totalSlots","rows","week","forEach","length","j","afterMonth","changeMonth","change","nMonth","nxMonth","pMonth","pvMonth","sortAndUpdateRemindersIndexes","arrayOfReminders","updateRemindersIndexes","sort","r1","r2","parseFloat","newReminders","addGlobalReminder","changeReminder","splice","dltReminder","dltAllDayReminders","dltAllReminders","width","Container","connect","dispatch","payload","actions","App","defaultState","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","logger","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9c14d3b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trash-alt.1ee190f0.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.5c8724f8.svg\";","import React from \"react\";\r\n\r\nconst Conditions = (props) => {\r\n  return (\r\n    <span className=\"span-forecast\">\r\n      {props.responseObj.cod === 200\r\n        ? props.responseObj.weather[0].description\r\n        : null}\r\n    </span>\r\n  );\r\n};\r\nexport default Conditions;\r\n","import React, { useState } from \"react\";\r\nimport Conditions from \"./Conditions.js\";\r\n\r\nexport default function Forecast(props) {\r\n  let [responseObj, setResponseObj] = useState({});\r\n  const { city } = props;\r\n  const uriEncodedCity = encodeURIComponent(city);\r\n  function getForecast(event) {\r\n    event.preventDefault();\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${uriEncodedCity}&appid=beb8a90b9eb6304fecf85b2eb1ae5ff1`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setResponseObj(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"forecast-div\" style={{ fontSize: \"0.7em\" }}>\r\n      <Conditions responseObj={responseObj} />\r\n      <button className=\"forecast-button\" type=\"button\" onClick={getForecast}>\r\n        UD WEA Forecast\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PlusIcon from \"./svgs/plus.svg\";\r\nimport { Select } from \"@material-ui/core\";\r\n\r\nexport default class ReminderDialog extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      open: false,\r\n      reminderTitle: props.reminderTitle || \"\",\r\n      reminderCity: props.reminderCity || \"\",\r\n      reminderDate: props.reminderDate || \"\",\r\n      reminderStartTime: props.reminderStartTime || \"10:00\",\r\n      reminderCategory: props.reminderCategory || \"work\",\r\n    };\r\n\r\n    this.handleClickOpen = this.handleClickOpen.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  handleClickOpen = (event) => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event) => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.handleSubmit(this.state);\r\n    this.setState({\r\n      reminderTitle: this.props.reminderTitle || \"\",\r\n      reminderCity: this.props.reminderCity || \"\",\r\n      reminderDate: this.props.reminderDate || \"\",\r\n      reminderStartTime: this.props.reminderStartTime || \"10:00\",\r\n      reminderCategory: this.props.reminderCategory || \"work\",\r\n    });\r\n  };\r\n\r\n  __handleTitleChange = (event) => {\r\n    this.setState({\r\n      reminderTitle: event.target.value,\r\n    });\r\n  };\r\n\r\n  __handleCityChange = (event) => {\r\n    this.setState({\r\n      reminderCity: event.target.value,\r\n    });\r\n  };\r\n\r\n  __handleDateChange = (event) => {\r\n    this.setState({\r\n      reminderDate: event.target.value,\r\n    });\r\n  };\r\n\r\n  __handleStartTimeChange = (event) => {\r\n    this.setState({\r\n      reminderStartTime: event.target.value,\r\n    });\r\n  };\r\n\r\n  __handleCategoryChange = (event) => {\r\n    this.setState({\r\n      reminderCategory: event.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"form-folder\">\r\n        <div\r\n          className=\"form-icon\"\r\n          src={PlusIcon}\r\n          alt=\"Add/edit reminder\"\r\n          onClick={this.handleClickOpen}\r\n        >\r\n          <i className=\"form-icon-img\"></i>\r\n        </div>\r\n        <Dialog\r\n          open={this.state.open}\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"form-dialog-title\"\r\n        >\r\n          <DialogTitle id=\"form-dialog-title\">{this.props.action}</DialogTitle>\r\n          <form onSubmit={this.onSubmit}>\r\n            <DialogContent>\r\n              <TextField\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"title\"\r\n                label=\"Reminder title\"\r\n                type=\"text\"\r\n                onChange={this.__handleTitleChange}\r\n                value={this.state.reminderTitle}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                autoFocus\r\n                placeholder=\"Bogota\"\r\n                margin=\"dense\"\r\n                id=\"city\"\r\n                label=\"Location (city)\"\r\n                type=\"text\"\r\n                onChange={this.__handleCityChange}\r\n                value={this.state.reminderCity}\r\n                fullWidth\r\n              />\r\n              {this.props.showDateField && (\r\n                <TextField\r\n                  InputLabelProps={{ shrink: true }}\r\n                  autoFocus\r\n                  maxLength=\"30\"\r\n                  margin=\"dense\"\r\n                  id=\"date\"\r\n                  label=\"Date\"\r\n                  type=\"date\"\r\n                  onChange={this.__handleDateChange}\r\n                  value={this.state.reminderDate}\r\n                  fullWidth\r\n                />\r\n              )}\r\n              <TextField\r\n                InputLabelProps={{ shrink: true }}\r\n                autoFocus\r\n                margin=\"dense\"\r\n                id=\"startTime\"\r\n                label=\"Start time\"\r\n                type=\"time\"\r\n                onChange={this.__handleStartTimeChange}\r\n                value={this.state.reminderStartTime}\r\n                fullWidth\r\n              />\r\n              <InputLabel id=\"category-label\">Category (color)</InputLabel>\r\n              <Select\r\n                autoFocus\r\n                placeholder=\"work\"\r\n                id=\"category\"\r\n                labelId=\"category-label\"\r\n                displayEmpty\r\n                onChange={this.__handleCategoryChange}\r\n                value={this.state.reminderCategory}\r\n                fullWidth\r\n              >\r\n                <MenuItem value=\"work\">Work</MenuItem>\r\n                <MenuItem value=\"home\">Home</MenuItem>\r\n                <MenuItem value=\"calendar\">Calendar</MenuItem>\r\n              </Select>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={this.handleClose} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button onClick={this.handleClose} type=\"submit\" color=\"primary\">\r\n                {this.props.submitText}\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport Forecast from \"./Forecast.js\";\r\nimport ReminderDialog from \"./ReminderDialog.js\";\r\nimport TrashIcon from \"./svgs/trash-alt.svg\";\r\n\r\nexport default class Day extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Binding functions for \"this\" access.\r\n    this.onClick = this.onClick.bind(this);\r\n    this.addReminder = this.addReminder.bind(this);\r\n  }\r\n\r\n  onClick = (event) => {\r\n    this.props.onDayClick(event, this.props.day);\r\n  };\r\n\r\n  addReminder = (newReminder) => {\r\n    this.props.addReminder(this.props.fullDate.format(\"YYYY-MM-DD\"), {\r\n      title: newReminder.reminderTitle,\r\n      city: newReminder.reminderCity,\r\n      date: this.props.fullDate.format(\"YYYY-MM-DD\"),\r\n      startTime: newReminder.reminderStartTime,\r\n      category: newReminder.reminderCategory,\r\n    });\r\n  };\r\n\r\n  editReminder = (index, newReminder) => {\r\n    this.props.editReminder(this.props.fullDate.format(\"YYYY-MM-DD\"), index, {\r\n      title: newReminder.reminderTitle,\r\n      city: newReminder.reminderCity,\r\n      date: newReminder.reminderDate,\r\n      startTime: newReminder.reminderStartTime,\r\n      category: newReminder.reminderCategory,\r\n    });\r\n  };\r\n\r\n  deleteReminder = (reminder) => {\r\n    this.props.deleteReminder(\r\n      this.props.fullDate.format(\"YYYY-MM-DD\"),\r\n      reminder.index\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { reminders } = this.props;\r\n    return (\r\n      <td\r\n        key={\"d\" + this.props.day}\r\n        className={`calendar-day ${this.props.currentDay}`}\r\n        onClick={this.onClick}\r\n      >\r\n        <span key={\"sDay\" + this.props.day} className=\"spanDay\">\r\n          {this.props.day}\r\n          <div className=\"day-icon\">\r\n            {reminders && (\r\n              <img\r\n                className=\"trash-icon trash-day\"\r\n                src={TrashIcon}\r\n                alt=\"Delete all\"\r\n                onClick={(e) =>\r\n                  this.props.deleteAllReminders(\r\n                    this.props.fullDate.format(\"YYYY-MM-DD\")\r\n                  )\r\n                }\r\n              />\r\n            )}\r\n            <ReminderDialog\r\n              classes={{ root: \"modal-container\" }}\r\n              action={`Add a new reminder on ${this.props.fullDate.format(\r\n                \"YYYY-MM-DD\"\r\n              )}`}\r\n              showDateField={false}\r\n              submitText={\"Add reminder\"}\r\n              handleSubmit={this.addReminder}\r\n            ></ReminderDialog>\r\n          </div>\r\n        </span>\r\n\r\n        <div className=\"reminds\">\r\n          {reminders &&\r\n            reminders.map((reminder) => (\r\n              <span\r\n                key={\"rDay\" + this.props.day}\r\n                className={\"spanRemind \" + reminder.category}\r\n              >\r\n                <p className=\"text-reminder\">\r\n                  <img\r\n                    className=\"trash-icon trash-remind\"\r\n                    src={TrashIcon}\r\n                    alt=\"Delete all\"\r\n                    onClick={(e) => this.deleteReminder(reminder)}\r\n                  />\r\n                  {String(reminder.title)}\r\n                </p>\r\n                <div className=\"text-reminder\">\r\n                  <ReminderDialog\r\n                    style={{ height: \"10px\" }}\r\n                    action={`Edit reminder`}\r\n                    showDateField={true}\r\n                    submitText={\"Update reminder\"}\r\n                    handleSubmit={(r) => this.editReminder(reminder.index, r)}\r\n                    reminderTitle={reminder.title}\r\n                    reminderCity={reminder.city}\r\n                    reminderDate={reminder.date}\r\n                    reminderStartTime={reminder.startTime}\r\n                    reminderCategory={reminder.category}\r\n                  ></ReminderDialog>{\" \"}\r\n                  {String(reminder.city)}\r\n                </div>\r\n                <Forecast\r\n                  city={reminder.city}\r\n                  date={this.props.fullDate.format(\"YYYY-MM-DD\")}\r\n                />\r\n                <p className=\"text-reminder\">{String(reminder.startTime)}</p>\r\n              </span>\r\n            ))}\r\n        </div>\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Day from \"./Day.js\";\r\nimport ReminderDialog from \"./ReminderDialog.js\";\r\nimport \"./calendar.css\";\r\nimport \"./icons.css\";\r\nimport TrashIcon from \"./svgs/trash-alt.svg\";\r\n\r\nclass Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dateNow: moment(),\r\n      selectedDay: moment().date(),\r\n    };\r\n    // Binding the functions of the component\r\n    this.lastDayOfMonth = this.lastDayOfMonth.bind(this);\r\n    this.changeMonth = this.changeMonth.bind(this);\r\n    this.currentDayF = this.currentDayF.bind(this);\r\n    this.month = this.month.bind(this);\r\n    this.year = this.year.bind(this);\r\n    this.firstDayOfMonth = this.firstDayOfMonth.bind(this);\r\n    this.makeBlanks = this.makeBlanks.bind(this);\r\n    this.makeDays = this.makeDays.bind(this);\r\n    this.makeTableCalendar = this.makeTableCalendar.bind(this);\r\n    this.onDayClick = this.onDayClick.bind(this);\r\n    this.deleteAllReminders = this.deleteAllReminders.bind(this);\r\n  }\r\n  weekdaysShortName = moment.weekdaysShort().map((day) => (\r\n    <th key={day} className=\"week-day\">\r\n      {day}\r\n    </th>\r\n  ));\r\n\r\n  lastDayOfMonth = () =>\r\n    moment(this.props.initialDate).endOf(\"month\").format(\"D\");\r\n\r\n  currentDayF = () => parseInt(this.props.initialDate.format(\"D\"));\r\n\r\n  month = () => this.props.initialDate.format(\"MMMM\");\r\n\r\n  year = () => this.props.initialDate.format(\"Y\");\r\n\r\n  firstDayOfMonth = () =>\r\n    moment(this.props.initialDate).startOf(\"month\").format(\"d\");\r\n\r\n  makeBlanks = () => {\r\n    let blanks = [];\r\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n      let d = moment()\r\n        .startOf(\"month\")\r\n        .subtract(i + 1, \"days\")\r\n        .format(\"D\");\r\n      blanks.unshift(\r\n        <td key={\"preBlank\" + i} className=\"calendar-day empty\">\r\n          {d}\r\n        </td>\r\n      );\r\n    }\r\n    return blanks;\r\n  };\r\n\r\n  makeDays = () => {\r\n    let daysInMonth = [];\r\n    for (let day = 1; day <= this.lastDayOfMonth(); day++) {\r\n      let fullDate = moment({\r\n        day: day,\r\n        month: this.state.dateNow.month(),\r\n      }).format(\"YYYY-MM-DD\");\r\n      daysInMonth.push(\r\n        <Day\r\n          key={\"day\" + day}\r\n          day={day}\r\n          month={this.state.dateNow.month()}\r\n          currentDay={day === this.state.selectedDay ? \"today\" : \"\"}\r\n          onDayClick={this.onDayClick}\r\n          fullDate={moment({ day: day, month: this.state.dateNow.month() })}\r\n          addReminder={this.addReminder}\r\n          editReminder={this.editReminder}\r\n          deleteReminder={this.deleteReminder}\r\n          deleteAllReminders={this.deleteAllDayReminders}\r\n          reminders={this.props.reminders[fullDate]}\r\n        />\r\n      );\r\n    }\r\n    return daysInMonth;\r\n  };\r\n\r\n  makeTableCalendar = () => {\r\n    let totalSlots = [...this.makeBlanks(), ...this.makeDays()];\r\n    let rows = [];\r\n    let week = [];\r\n    totalSlots.forEach((day, index) => {\r\n      if (index % 7 !== 0) {\r\n        week.push(day); // if index not equal 7 that means not go to next week\r\n      } else {\r\n        rows.push(week); // push week array in rows when next week is reached\r\n        week = []; // empty container for next week\r\n        week.push(day); // in current loop we still push current row to new container\r\n      }\r\n      if (index === totalSlots.length - 1) {\r\n        // when end loop we add remain date\r\n        let j = index;\r\n        let afterMonth = 1;\r\n        while (j % 7 !== 6) {\r\n          week.push(\r\n            <td key={\"aftBlank\" + afterMonth} className=\"calendar-day empty\">\r\n              {afterMonth}\r\n            </td>\r\n          );\r\n          j++;\r\n          afterMonth++;\r\n        }\r\n        rows.push(week); // push the final week\r\n      }\r\n    });\r\n    return rows.map((day, index) => <tr key={\"week\" + index}>{day}</tr>);\r\n  };\r\n\r\n  changeMonth = (e, change) => {\r\n    switch (change) {\r\n      case \"NEXT\":\r\n        const nMonth = moment(this.props.initialDate).month(\r\n          this.props.initialDate.month() + 1\r\n        );\r\n        this.props.nxMonth(nMonth);\r\n        this.setState({ dateNow: nMonth });\r\n        break;\r\n      case \"PREV\":\r\n        const pMonth = moment(this.props.initialDate).month(\r\n          this.props.initialDate.month() - 1\r\n        );\r\n        this.props.pvMonth(pMonth);\r\n        this.setState({ dateNow: pMonth });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  sortAndUpdateRemindersIndexes = (arrayOfReminders) => {\r\n    return this.updateRemindersIndexes(\r\n      arrayOfReminders.sort(\r\n        (r1, r2) => parseFloat(r1.startTime) - parseFloat(r2.startTime)\r\n      )\r\n    );\r\n  };\r\n\r\n  updateRemindersIndexes = (arrayOfReminders) => {\r\n    return arrayOfReminders.map((reminder, index) => {\r\n      reminder.index = index;\r\n      return reminder;\r\n    });\r\n  };\r\n\r\n  addReminder = (fullDate, newReminder) => {\r\n    let newReminders = this.props.reminders;\r\n    let arrayOfReminders = [];\r\n    if (fullDate in newReminders) {\r\n      arrayOfReminders = newReminders[fullDate];\r\n    }\r\n    arrayOfReminders.push(newReminder);\r\n    newReminders[fullDate] = this.sortAndUpdateRemindersIndexes(\r\n      arrayOfReminders\r\n    );\r\n    this.props.newReminder(newReminders);\r\n  };\r\n\r\n  addGlobalReminder = (newReminder) => {\r\n    this.addReminder(newReminder.reminderDate, {\r\n      title: newReminder.reminderTitle,\r\n      city: newReminder.reminderCity,\r\n      date: newReminder.reminderDate,\r\n      startTime: newReminder.reminderStartTime,\r\n      category: newReminder.reminderCategory,\r\n    });\r\n  };\r\n\r\n  editReminder = (fullDate, index, newReminder) => {\r\n    // If date was changed\r\n    if (fullDate !== newReminder.date) {\r\n      this.addReminder(newReminder.date, newReminder);\r\n      this.deleteReminder(fullDate, index);\r\n    } else {\r\n      let newReminders = this.props.reminders;\r\n      let arrayOfReminders = newReminders[fullDate];\r\n      arrayOfReminders[index] = newReminder;\r\n      newReminders[fullDate] = this.sortAndUpdateRemindersIndexes(\r\n        arrayOfReminders\r\n      );\r\n      this.props.changeReminder(newReminders);\r\n    }\r\n  };\r\n\r\n  deleteReminder = (fullDate, index) => {\r\n    let newReminders = this.props.reminders;\r\n    let arrayOfReminders = newReminders[fullDate];\r\n    arrayOfReminders.splice(index, 1);\r\n    newReminders[fullDate] = this.updateRemindersIndexes(arrayOfReminders);\r\n    if (arrayOfReminders.length === 0) {\r\n      delete newReminders[fullDate];\r\n    }\r\n    this.props.dltReminder(newReminders);\r\n  };\r\n\r\n  deleteAllDayReminders = (fullDate) => {\r\n    let newReminders = this.props.reminders;\r\n    delete newReminders[fullDate];\r\n    this.props.dltAllDayReminders(newReminders);\r\n  };\r\n\r\n  deleteAllReminders = (event) => {\r\n    this.props.dltAllReminders({});\r\n  };\r\n\r\n  onDayClick = (e, d) => {\r\n    this.setState({ selectedDay: d });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar-container\">\r\n        <div className=\"calendar-navi\">\r\n          <button\r\n            className=\"month-change month-prev\"\r\n            onClick={(e) => this.changeMonth(e, \"PREV\")}\r\n          >\r\n            {\"Prev\"}\r\n          </button>\r\n          <h2>\r\n            <span className=\"calendar-label\">{this.month()} </span>\r\n            <span className=\"calendar-label\">{this.year()} </span>\r\n          </h2>\r\n          <div className=\"icons-right\">\r\n            <div className=\"nav-icon\">\r\n              <ReminderDialog\r\n                action={\"Add a new reminder\"}\r\n                showDateField={true}\r\n                submitText={\"Add reminder\"}\r\n                handleSubmit={this.addGlobalReminder}\r\n              ></ReminderDialog>\r\n              <img\r\n                className=\"trash-icon\"\r\n                src={TrashIcon}\r\n                alt=\"Delete all\"\r\n                onClick={this.deleteAllReminders}\r\n              />\r\n            </div>\r\n            <button\r\n              onClick={(e) => this.changeMonth(e, \"NEXT\")}\r\n              className=\"month-change month-next\"\r\n            >\r\n              {\"Next\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <table style={{ width: \"100%\" }}>\r\n          <thead className=\"\">\r\n            <tr>{this.weekdaysShortName}</tr>\r\n          </thead>\r\n          <tbody className=\"\">{this.makeTableCalendar()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calendar;\r\n","import React from \"react\";\r\nimport Calendar from \"./components/calendar/\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"./app/actions\";\r\n\r\n// ----------- Redux configuration\r\nconst mapStateToProps = (state) => ({ ...state });\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    nxMonth: (payload) => {\r\n      dispatch(actions.nextMonth(payload));\r\n    },\r\n    pvMonth: (payload) => {\r\n      dispatch(actions.prevMonth(payload));\r\n    },\r\n    newReminder: (payload) => {\r\n      dispatch(actions.addReminder(payload));\r\n    },\r\n    changeReminder: (payload) => {\r\n      dispatch(actions.editReminder(payload));\r\n    },\r\n    dltReminder: (payload) => {\r\n      dispatch(actions.deleteReminder(payload));\r\n    },\r\n    dltAllReminders: (payload) => {\r\n      dispatch(actions.deleteAllReminders(payload));\r\n    },\r\n    dltAllDayReminders: (payload) => {\r\n      dispatch(actions.deleteAllDayReminders(payload));\r\n    },\r\n  };\r\n};\r\n\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Calendar);\r\n// end ---------------------------\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/**\r\n * Action types\r\n */\r\nexport const ADD_REMINDER = \"ADD_REMINDER\";\r\nexport const EDIT_REMINDER = \"EDIT_REMINDER\";\r\nexport const DELETE_REMINDER = \"DELETE_REMINDER\";\r\nexport const DELETE_ALL_REMINDERS = \"DELETE_ALL_REMINDERS\";\r\nexport const DELETE_ALL_DAY_REMINDERS = \"DELETE_ALL_DAY_REMINDERS\";\r\nexport const NEXT_MONTH = \"NEXT_MONTH\";\r\nexport const PREV_MONTH = \"PREV_MONTH\";\r\n\r\n/**\r\n * Action creators\r\n */\r\nexport function addReminder(payload) {\r\n  return { type: ADD_REMINDER, payload };\r\n}\r\n\r\nexport function editReminder(payload) {\r\n  return { type: EDIT_REMINDER, payload };\r\n}\r\n\r\nexport function deleteReminder(payload) {\r\n  return { type: DELETE_REMINDER, payload };\r\n}\r\n\r\nexport function deleteAllReminders(payload) {\r\n  return { type: DELETE_ALL_REMINDERS, payload };\r\n}\r\n\r\nexport function deleteAllDayReminders(payload) {\r\n  return { type: DELETE_ALL_DAY_REMINDERS, payload };\r\n}\r\n\r\nexport function nextMonth(payload) {\r\n  return { type: NEXT_MONTH, payload };\r\n}\r\n\r\nexport function prevMonth(payload) {\r\n  return { type: PREV_MONTH, payload };\r\n}\r\n","import { NEXT_MONTH, PREV_MONTH } from \"../actions\";\r\nimport moment from \"moment\";\r\n\r\nconst defaultState = moment();\r\n\r\nexport default function dateObject(state = defaultState, action) {\r\n  switch (action.type) {\r\n    case NEXT_MONTH:\r\n      return action.payload;\r\n    case PREV_MONTH:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { logger } from \"redux-logger\";\r\nimport initialDate from \"./reducers/initialDate\";\r\nimport reminders from \"./reducers/reminders\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  initialDate,\r\n  reminders,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(logger))\r\n);\r\n\r\nexport default store;\r\n","import {\r\n  ADD_REMINDER,\r\n  EDIT_REMINDER,\r\n  DELETE_REMINDER,\r\n  DELETE_ALL_REMINDERS,\r\n  DELETE_ALL_DAY_REMINDERS,\r\n} from \"../actions\";\r\n\r\nexport default function reminders(state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_REMINDER:\r\n    case DELETE_REMINDER:\r\n    case DELETE_ALL_DAY_REMINDERS:\r\n    case EDIT_REMINDER:\r\n      return {\r\n        ...state,\r\n        reminders: action.payload,\r\n      };\r\n    case DELETE_ALL_REMINDERS:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport store from \"./app/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/calendar/CreateReminder.js","components/calendar/Popper.js","components/calendar/Conditions.js","components/calendar/Forecast.js","components/calendar/Day.js","components/calendar/index.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["CreateReminder","props","currentDayF","parseInt","dateObject","format","handleSubmit","event","setState","currentReminder","state","preventDefault","onSave","onClick","onDayClick","day","onClose","text","city","category","date","fullDate","startTime","endTime","slice","bind","handleChangeText","handleChangeCity","handleChangeCategory","handleChangeStartTime","handleChangeDate","this","target","value","className","onSubmit","type","maxLength","placeholder","autoFocus","onChange","React","Component","useStyles","makeStyles","theme","paper","border","padding","spacing","backgroundColor","palette","background","Fade","forwardRef","ref","open","in","children","onEnter","onExited","other","style","useSpring","from","opacity","to","onStart","onRest","div","SpringPopper","classes","anchorEl","Boolean","id","undefined","Popper","placement","transition","TransitionProps","Conditions","responseObj","cod","weather","description","Forecast","useState","setResponseObj","uriEncodedCity","encodeURIComponent","fontSize","fetch","method","then","response","json","catch","err","console","log","Day","month","year","firstDayOfMonth","moment","startOf","componentWillReceiveProps","nextProps","newReminder","addReminder","isSame","currentReminderIndex","reminder","reminders","push","popperAnchor","sort","r1","r2","parseFloat","onDoubleClick","currentTarget","createNewReminder","onDeleteRemind","splice","currentDay","lastDayOfMonth","endOf","key","map","remind","index","String","Calendar","makeBlanks","blanks","i","d","subtract","unshift","makeDays","daysInMonth","selectedDay","makeTableCalendar","totalSlots","rows","week","forEach","length","j","afterMonth","e","allMonths","months","weekdaysShortName","weekdaysShort","width","App","configureStore","reducer","counter","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gXAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAyBRC,YAAc,kBAAMC,SAAS,EAAKF,MAAMG,WAAWC,OAAO,OA1BvC,EA0DnBC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZC,gBAAiB,EAAKC,MAAMD,gBAAkB,IAEhDF,EAAMI,kBAENC,EADmB,EAAKX,MAAhBW,QACD,EAAKF,QAhEK,EAmEnBG,QAAU,SAACN,GACT,EAAKN,MAAMa,WAAWP,EAAO,EAAKG,MAAMK,MApEvB,EAuEnBC,QAAU,SAACT,IAETS,EADoB,EAAKf,MAAjBe,YAtER,EAAKN,MAAQ,CACXD,gBAAiB,EACjBQ,KAAM,WACNC,KAAM,SACNC,SAAU,OACVC,KAAMnB,EAAMoB,SAAShB,OAAO,cAC5BiB,UAAW,YAGb,EAAKZ,MAAMa,QAAX,UACEpB,SAAS,EAAKO,MAAMY,UAAUE,MAAM,EAAG,GAAI,IAAM,EADnD,YAEM,EAAKd,MAAMY,UAAUE,MAAM,IAEjC,EAAKtB,YAAc,EAAKA,YAAYuB,KAAjB,gBACnB,EAAKnB,aAAe,EAAKA,aAAamB,KAAlB,gBACpB,EAAKC,iBAAmB,EAAKA,iBAAiBD,KAAtB,gBACxB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,qBAAuB,EAAKA,qBAAqBH,KAA1B,gBAC5B,EAAKI,sBAAwB,EAAKA,sBAAsBJ,KAA3B,gBAC7B,EAAKK,iBAAmB,EAAKA,iBAAiBL,KAAtB,gBACxB,EAAKnB,aAAe,EAAKA,aAAamB,KAAlB,gBACpB,EAAKT,QAAU,EAAKA,QAAQS,KAAb,gBAvBE,E,6DA4BFlB,GACfwB,KAAKvB,SAAS,CACZS,KAAMV,EAAMyB,OAAOC,U,uCAIN1B,GACfwB,KAAKvB,SAAS,CACZU,KAAMX,EAAMyB,OAAOC,U,2CAIF1B,GACnBwB,KAAKvB,SAAS,CACZW,SAAUZ,EAAMyB,OAAOC,U,4CAIL1B,GACpBwB,KAAKvB,SAAS,CACZc,UAAWf,EAAMyB,OAAOC,U,uCAIX1B,GACfwB,KAAKvB,SAAS,CACZY,KAAMb,EAAMyB,OAAOC,U,+BAuBrB,OACE,0BAAMC,UAAU,gBAAgBC,SAAUJ,KAAKzB,cAA/C,gBACe,4BAAQ8B,KAAK,UAAb,QACb,4BAAQA,KAAK,SAASvB,QAASkB,KAAKf,SAApC,KAGA,6BACA,2BACEoB,KAAK,OACLC,UAAU,KACVC,YAAaP,KAAK9B,MAAMqC,aAAe,kBACvCC,UAAU,OACVN,MAAOF,KAAK9B,MAAMgB,MAAQc,KAAKrB,MAAMO,KACrCuB,SAAUT,KAAKL,mBAEjB,6BACA,2BACEW,UAAU,KACVJ,MAAOF,KAAK9B,MAAMiB,MAAQa,KAAKrB,MAAMQ,KACrCsB,SAAUT,KAAKJ,mBAEjB,6BACA,4BACEM,MAAOF,KAAKrB,MAAMS,SAClBqB,SAAUT,KAAKH,sBAEf,4BAAQK,MAAM,QAAd,QACA,4BAAQA,MAAM,QAAd,QACA,4BAAQA,MAAM,YAAd,aAEF,6BACA,2BACEG,KAAK,OACLH,MAAOF,KAAKrB,MAAMY,UAClBkB,SAAUT,KAAKF,wBAEjB,6BACA,2BACEO,KAAK,OACLH,MAAOF,KAAKrB,MAAMU,KAClBoB,SAAUT,KAAKD,wB,GAtHmBW,IAAMC,WCI5CC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,OAAQ,wBACRC,QAASH,EAAMI,QAAQ,GACvBC,gBAAiBL,EAAMM,QAAQC,WAAWN,WAIxCO,EAAOZ,IAAMa,YAAW,SAAcrD,EAAOsD,GAAM,IAC3CC,EAAgDvD,EAApDwD,GAAUC,EAA0CzD,EAA1CyD,SAAUC,EAAgC1D,EAAhC0D,QAASC,EAAuB3D,EAAvB2D,SAAaC,EADI,YACM5D,EADN,wCAEhD6D,EAAQC,oBAAU,CACtBC,KAAM,CAAEC,QAAS,GACjBC,GAAI,CAAED,QAAST,EAAO,EAAI,GAC1BW,QAAS,WACHX,GAAQG,GACVA,KAGJS,OAAQ,YACDZ,GAAQI,GACXA,OAKN,OACE,kBAAC,WAASS,IAAV,eAAcd,IAAKA,EAAKO,MAAOA,GAAWD,GACvCH,MAYQ,SAASY,EAAarE,GACnC,IAAMsE,EAAU5B,IACR6B,EAA8BvE,EAA9BuE,SAAU5D,EAAoBX,EAApBW,OAAQI,EAAYf,EAAZe,QAEpBwC,EAAOiB,QAAQD,GACfE,EAAKlB,EAAO,qBAAkBmB,EAEpC,OACE,6BACE,kBAACC,EAAA,EAAD,CACEF,GAAIA,EACJlB,KAAMA,EACNgB,SAAUA,EACVK,UAAU,QACVC,YAAU,IAET,gBAAGC,EAAH,EAAGA,gBAAH,OACC,kBAAC,EAASA,EACR,yBAAK7C,UAAWqC,EAAQzB,OACtB,kBAAC,EAAD,CACER,YAAa,GACbrB,KAAM,GACNC,KAAM,GACNC,SAAU,GACVP,OAAQA,EACRI,QAASA,EACTK,SAAUpB,EAAMoB,iB,YC7DjB2D,EATI,SAAC/E,GAClB,OACE,0BAAMiC,UAAU,iBACa,MAA1BjC,EAAMgF,YAAYC,IACfjF,EAAMgF,YAAYE,QAAQ,GAAGC,YAC7B,OCJK,SAASC,EAASpF,GAAQ,IAAD,EACFqF,mBAAS,IADP,mBACjCL,EADiC,KACpBM,EADoB,KAE9BrE,EAAejB,EAAfiB,KACFsE,GADiBvF,EAATmB,KACSqE,mBAAmBvE,IAiB1C,OACE,0BAAM4C,MAAO,CAAE4B,SAAU,UACvB,kBAAC,EAAD,CAAYT,YAAaA,IACzB,4BAAQ/C,UAAU,kBAAkBE,KAAK,SAASvB,QAnBtD,SAAqBN,GACnBA,EAAMI,iBACNgF,MAAM,qDAAD,OACkDH,EADlD,2CAEH,CACEI,OAAQ,QAGTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GACLP,EAAeO,MAEhBE,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAMd,4B,ICrBeG,E,kDACnB,WAAYnG,GAAQ,IAAD,8BACjB,cAAMA,IAsBRC,YAAc,kBAAMC,SAAS,EAAKO,MAAMN,WAAWC,OAAO,OAvBvC,EAwBnBgG,MAAQ,kBAAM,EAAK3F,MAAMN,WAAWC,OAAO,SAxBxB,EAyBnBiG,KAAO,kBAAM,EAAK5F,MAAMN,WAAWC,OAAO,MAzBvB,EA0BnBkG,gBAAkB,kBAChBC,IAAO,EAAK9F,MAAMN,YAAYqG,QAAQ,SAASpG,OAAO,MA3BrC,EAqCnBqG,0BAA4B,SAACC,GAC3B,IAAMC,EAAcD,EAAUE,YAC9B,GAAID,EAAYxF,MACdwF,EAAYxF,KAAK0F,OAAO,EAAK7G,MAAMoB,SAAU,OAAQ,CACrD,IAAMZ,EAAkB,EAAKR,MAAM4G,YAC7BE,EAAwBtG,EAAgBuG,SAAWvG,EAAgBuG,SAASvG,iBAAmB,EACrG,GAAImG,EAAYI,SAASvG,kBAAoBsG,EAAsB,CAAC,IAC1DE,EAAc,EAAKvG,MAAnBuG,UACRA,EAAUC,KAAKN,EAAYI,UAC3B,EAAKxG,SAAS,CACZ2G,aAAc,KACdF,UAAWA,EAAUG,MACnB,SAACC,EAAIC,GAAL,OAAYC,WAAWF,EAAG/F,WAAaiG,WAAWD,EAAGhG,mBAjD5C,EAwDnBT,QAAU,SAACN,GACT,EAAKN,MAAMa,WAAWP,EAAO,EAAKG,MAAMK,MAzDvB,EA4DnByG,cAAgB,SAACjH,GACf,EAAKC,SAAS,CACZ2G,aAAc1C,QAAQ,EAAK0C,cAAgB,KAAO5G,EAAMkH,iBA9DzC,EAkEnB7G,OAAS,SAACoG,GACR,EAAK/G,MAAMyH,kBAAkBV,EAAS5F,KAAM4F,IAnE3B,EAsEnBhG,QAAU,WACR,EAAKR,SAAS,CAAE2G,aAAc,QAvEb,EA0EnBQ,eAAiB,SAACpH,GAAW,IACnB0G,EAAc,EAAKvG,MAAnBuG,UACRA,EAAUW,OAAOrH,EAAMyB,OAAOC,MAAO,GACrC,EAAKzB,SAAS,CACZyG,UAAWA,EAAUG,MACnB,SAACC,EAAIC,GAAL,OAAYC,WAAWF,EAAG/F,WAAaiG,WAAWD,EAAGhG,iBA7EzD,EAAKZ,MAAQ,CACXK,IAAK,EACL8G,WAAY,GACZzH,WAAYoG,MACZW,aAAc,KACdF,UAAW,IAGb,EAAK/G,YAAc,EAAKA,YAAYuB,KAAjB,gBACnB,EAAK4E,MAAQ,EAAKA,MAAM5E,KAAX,gBACb,EAAK6E,KAAO,EAAKA,KAAK7E,KAAV,gBACZ,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,gBACvB,EAAKb,OAAS,EAAKA,OAAOa,KAAZ,gBACd,EAAKT,QAAU,EAAKA,QAAQS,KAAb,gBACf,EAAKkG,eAAiB,EAAKA,eAAelG,KAApB,gBAEtB,EAAKqG,eAAiBtB,IAAO,EAAK9F,MAAMN,YACrC2H,MAAM,SACN1H,OAAO,KApBO,E,gEA8BjB0B,KAAKvB,UAAS,SAACE,EAAOT,GAAR,MAAmB,CAC/Bc,IAAKd,EAAMc,KAAOL,EAAMK,IACxB8G,WAAY5H,EAAM4H,YAAcnH,EAAMmH,WACtCzH,WAAYH,EAAMG,YAAcM,EAAMN,iB,+BAmDhC,IAAD,OACP,OACE,wBACE4H,IAAK,IAAMjG,KAAK9B,MAAMc,IACtBmB,UAAS,uBAAkBH,KAAK9B,MAAM4H,YACtCL,cAAezF,KAAKyF,eAEpB,0BACEQ,IAAK,OAASjG,KAAK9B,MAAMc,IACzBF,QAASkB,KAAKlB,QACdqB,UAAU,WAETH,KAAKrB,MAAMK,IACZ,kBAACuD,EAAD,CACEE,SAAUzC,KAAKrB,MAAMyG,aACrBvG,OAAQmB,KAAKnB,OACbI,QAASe,KAAKf,QACdK,SAAUU,KAAK9B,MAAMoB,YAGzB,yBAAKa,UAAU,WACZH,KAAKrB,MAAMuG,UAAUgB,KAAI,SAACC,EAAQC,GAAT,OACxB,0BACEjG,UAAW,cAAgBgG,EAAO/G,SAClC6G,IAAK,SAAWG,GAEhB,uBAAGjG,UAAW,iBACZ,4BACED,MAAOkG,EACPjG,UAAW,WACXrB,QAAS,EAAK8G,gBAEb,IAAK,KAEPS,OAAOF,EAAOjH,OAEhBmH,OAAOF,EAAOhH,MAAO,IACtB,kBAACmE,EAAD,CAAUnE,KAAMgH,EAAOhH,KAAME,KAAM8G,EAAO9G,OAC1C,6BACCgH,OAAOF,EAAO5G,WACf,uC,GA7HmBmB,IAAMC,WCAlB2F,G,wDACnB,WAAYpI,GAAQ,IAAD,8BACjB,cAAMA,IAiCRC,YAAc,kBAAMC,SAAS,EAAKO,MAAMN,WAAWC,OAAO,OAlCvC,EAoCnBgG,MAAQ,kBAAM,EAAK3F,MAAMN,WAAWC,OAAO,SApCxB,EAsCnBiG,KAAO,kBAAM,EAAK5F,MAAMN,WAAWC,OAAO,MAtCvB,EAwCnBkG,gBAAkB,kBAChBC,IAAO,EAAK9F,MAAMN,YAAYqG,QAAQ,SAASpG,OAAO,MAzCrC,EA2CnBiI,WAAa,WAEX,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAI,EAAKjC,kBAAmBiC,IAAK,CAC/C,IAAIC,EAAIjC,MACLC,QAAQ,SACRiC,SAASF,EAAI,EAAG,QAChBnI,OAAO,KACVkI,EAAOI,QACL,wBAAIX,IAAK,WAAaQ,EAAGtG,UAAU,sBAChCuG,IAIP,OAAOF,GAxDU,EA2DnBK,SAAW,WAET,IADA,IAAIC,EAAc,GACT9H,EAAM,EAAGA,GAAO,EAAK+G,eAAgB/G,IAC5C8H,EAAY3B,KACV,kBAAC,EAAD,CACEc,IAAK,MAAQjH,EACbA,IAAKA,EACL8G,WAAY9G,IAAQ,EAAKL,MAAMoI,YAAc,QAAU,GACvDhI,WAAY,EAAKA,WACjBO,SAAUmF,IAAO,CAAEzF,IAAKA,IACxB2G,kBAAmB,EAAKA,kBACxBb,YAAa,EAAKnG,MAAMmG,eAI9B,OAAOgC,GA1EU,EA6EnBE,kBAAoB,WAClB,IAAIC,EAAU,sBAAO,EAAKV,cAAZ,YAA6B,EAAKM,aAC5CK,EAAO,GACPC,EAAO,GAyBX,OAxBAF,EAAWG,SAAQ,SAACpI,EAAKoH,GAQvB,GAPIA,EAAQ,IAAM,EAChBe,EAAKhC,KAAKnG,IAEVkI,EAAK/B,KAAKgC,IACVA,EAAO,IACFhC,KAAKnG,IAERoH,IAAUa,EAAWI,OAAS,EAAG,CAInC,IAFA,IAAIC,EAAIlB,EACJmB,EAAa,EACVD,EAAI,IAAM,GACfH,EAAKhC,KACH,wBAAIc,IAAK,WAAasB,EAAYpH,UAAU,sBACzCoH,IAGLD,IACAC,IAEFL,EAAK/B,KAAKgC,OAGPD,EAAKhB,KAAI,SAAClH,EAAKoH,GAAN,OAAgB,wBAAIH,IAAK,OAASG,GAAQpH,OAzGzC,EA4GnB2G,kBAAoB,SAACtG,EAAM4F,GACzB,EAAKxG,SAAS,CACZqG,YAAa,CACXzF,KAAMoF,IAAOpF,GACb4F,SAAUA,MAhHG,EAqHnBlG,WAAa,SAACyI,EAAGd,GACf,EAAKjI,SAAS,CAAEsI,YAAaL,KAnH7B,EAAK/H,MAAQ,CACXN,WAAYoG,MACZgD,UAAWhD,IAAOiD,SAClBX,YAAatC,MAASpF,OACtByF,YAAa,CACXzF,KAAM,KACN4F,SAAU,OAId,EAAK0C,kBAAoBlD,IAAOmD,gBAAgB1B,KAAI,SAAClH,GAAD,OAClD,wBAAIiH,IAAKjH,EAAKmB,UAAU,YACrBnB,MAGL,EAAK+G,eAAiBtB,IAAO,EAAK9F,MAAMN,YACrC2H,MAAM,SACN1H,OAAO,KAGV,EAAKH,YAAc,EAAKA,YAAYuB,KAAjB,gBACnB,EAAK4E,MAAQ,EAAKA,MAAM5E,KAAX,gBACb,EAAK6E,KAAO,EAAKA,KAAK7E,KAAV,gBACZ,EAAK8E,gBAAkB,EAAKA,gBAAgB9E,KAArB,gBACvB,EAAK6G,WAAa,EAAKA,WAAW7G,KAAhB,gBAClB,EAAKmH,SAAW,EAAKA,SAASnH,KAAd,gBAChB,EAAKsH,kBAAoB,EAAKA,kBAAkBtH,KAAvB,gBACzB,EAAKX,WAAa,EAAKA,WAAWW,KAAhB,gBAClB,EAAKiG,kBAAoB,EAAKA,kBAAkBjG,KAAvB,gBA/BR,E,qDA0HjB,OACE,yBAAKS,UAAU,sBACb,yBAAKA,UAAU,iBACb,4BACE,0BAAMA,UAAU,kBAAkBH,KAAKsE,QAAvC,KACA,0BAAMnE,UAAU,kBAAkBH,KAAKuE,OAAvC,OAGJ,2BAAOxC,MAAO,CAAE8F,MAAO,SACrB,2BAAO1H,UAAU,IACf,4BAAKH,KAAK2H,oBAEZ,2BAAOxH,UAAU,IAAIH,KAAKgH,2B,GAvIEtG,IAAMC,YCQ7BmH,MARf,WACE,OACE,yBAAK3H,UAAU,OACb,kBAAC,EAAD,Q,QCNS4H,cAAe,CAC5BC,QAAS,CACPC,QAAS,M,QCQOvF,QACW,cAA7BwF,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhF,MAAK,SAAAiF,GACjCA,EAAaC,kB","file":"static/js/main.9d5995e5.chunk.js","sourcesContent":["import React from \"react\";\r\n// import moment from \"moment\";\r\n\r\nexport default class CreateReminder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentReminder: 0,\r\n      text: \"Reminder\",\r\n      city: \"Bogota\",\r\n      category: \"home\",\r\n      date: props.fullDate.format(\"YYYY-MM-DD\"),\r\n      startTime: \"10:00:00\",\r\n    };\r\n\r\n    this.state.endTime = `${\r\n      parseInt(this.state.startTime.slice(0, 2), 10) + 1\r\n      }:${this.state.startTime.slice(2)}`;\r\n\r\n    this.currentDayF = this.currentDayF.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChangeText = this.handleChangeText.bind(this);\r\n    this.handleChangeCity = this.handleChangeCity.bind(this);\r\n    this.handleChangeCategory = this.handleChangeCategory.bind(this);\r\n    this.handleChangeStartTime = this.handleChangeStartTime.bind(this);\r\n    this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n  }\r\n\r\n  currentDayF = () => parseInt(this.props.dateObject.format(\"D\"));\r\n\r\n  handleChangeText(event) {\r\n    this.setState({\r\n      text: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeCity(event) {\r\n    this.setState({\r\n      city: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeCategory(event) {\r\n    this.setState({\r\n      category: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeStartTime(event) {\r\n    this.setState({\r\n      startTime: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeDate(event) {\r\n    this.setState({\r\n      date: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    this.setState({\r\n      currentReminder: this.state.currentReminder + 1,\r\n    });\r\n    event.preventDefault();\r\n    const { onSave } = this.props;\r\n    onSave(this.state);\r\n  };\r\n\r\n  onClick = (event) => {\r\n    this.props.onDayClick(event, this.state.day);\r\n  };\r\n\r\n  onClose = (event) => {\r\n    const { onClose } = this.props;\r\n    onClose();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"form-reminder\" onSubmit={this.handleSubmit}>\r\n        Add reminder <button type=\"submit\">Save</button>\r\n        <button type=\"button\" onClick={this.onClose}>\r\n          X\r\n        </button>\r\n        <br />\r\n        <input\r\n          type=\"type\"\r\n          maxLength=\"30\"\r\n          placeholder={this.props.placeholder || \"New reminder...\"}\r\n          autoFocus=\"true\"\r\n          value={this.props.text || this.state.text}\r\n          onChange={this.handleChangeText}\r\n        />\r\n        <br />\r\n        <input\r\n          maxLength=\"30\"\r\n          value={this.props.city || this.state.city}\r\n          onChange={this.handleChangeCity}\r\n        ></input>\r\n        <br />\r\n        <select\r\n          value={this.state.category}\r\n          onChange={this.handleChangeCategory}\r\n        >\r\n          <option value=\"home\">Home</option>\r\n          <option value=\"work\">Work</option>\r\n          <option value=\"calendar\">Calendar</option>\r\n        </select>\r\n        <br />\r\n        <input\r\n          type=\"time\"\r\n          value={this.state.startTime}\r\n          onChange={this.handleChangeStartTime}\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"date\"\r\n          value={this.state.date}\r\n          onChange={this.handleChangeDate}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport { useSpring, animated } from \"react-spring/web.cjs\"; // web.cjs is required for IE 11 support\r\nimport CreateReminder from \"./CreateReminder.js\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    border: \"1px solid transparent\",\r\n    padding: theme.spacing(1),\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nconst Fade = React.forwardRef(function Fade(props, ref) {\r\n  const { in: open, children, onEnter, onExited, ...other } = props;\r\n  const style = useSpring({\r\n    from: { opacity: 0 },\r\n    to: { opacity: open ? 1 : 0 },\r\n    onStart: () => {\r\n      if (open && onEnter) {\r\n        onEnter();\r\n      }\r\n    },\r\n    onRest: () => {\r\n      if (!open && onExited) {\r\n        onExited();\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <animated.div ref={ref} style={style} {...other}>\r\n      {children}\r\n    </animated.div>\r\n  );\r\n});\r\n\r\nFade.propTypes = {\r\n  children: PropTypes.element,\r\n  in: PropTypes.bool,\r\n  onEnter: PropTypes.func,\r\n  onExited: PropTypes.func,\r\n};\r\n\r\nexport default function SpringPopper(props) {\r\n  const classes = useStyles();\r\n  const { anchorEl, onSave, onClose } = props;\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"spring-popper\" : undefined;\r\n\r\n  return (\r\n    <div>\r\n      <Popper\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        placement=\"right\"\r\n        transition\r\n      >\r\n        {({ TransitionProps }) => (\r\n          <Fade {...TransitionProps}>\r\n            <div className={classes.paper}>\r\n              <CreateReminder\r\n                placeholder={\"\"}\r\n                text={\"\"}\r\n                city={\"\"}\r\n                category={\"\"}\r\n                onSave={onSave}\r\n                onClose={onClose}\r\n                fullDate={props.fullDate}\r\n              />\r\n            </div>\r\n          </Fade>\r\n        )}\r\n      </Popper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nconst Conditions = (props) => {\r\n  return (\r\n    <span className=\"span-forecast\">\r\n      {props.responseObj.cod === 200\r\n        ? props.responseObj.weather[0].description\r\n        : null}\r\n    </span>\r\n  );\r\n};\r\nexport default Conditions;\r\n","import React, { useState } from \"react\";\r\nimport Conditions from \"./Conditions.js\";\r\n\r\nexport default function Forecast(props) {\r\n  let [responseObj, setResponseObj] = useState({});\r\n  const { city, date } = props;\r\n  const uriEncodedCity = encodeURIComponent(city);\r\n  function getForecast(event) {\r\n    event.preventDefault();\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${uriEncodedCity}&appid=beb8a90b9eb6304fecf85b2eb1ae5ff1`,\r\n      {\r\n        method: \"GET\",\r\n      }\r\n    )\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setResponseObj(response);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  return (\r\n    <span style={{ fontSize: \"0.7em\" }}>\r\n      <Conditions responseObj={responseObj} />\r\n      <button className=\"forecast-button\" type=\"button\" onClick={getForecast}>\r\n        Update Weather Forecast\r\n      </button>\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport SpringPopper from \"./Popper.js\";\r\nimport Forecast from \"./Forecast.js\";\r\n\r\nexport default class Day extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      day: 1,\r\n      currentDay: \"\",\r\n      dateObject: moment(),\r\n      popperAnchor: null,\r\n      reminders: [],\r\n    };\r\n    // Binding functions for \"this\" access.\r\n    this.currentDayF = this.currentDayF.bind(this);\r\n    this.month = this.month.bind(this);\r\n    this.year = this.year.bind(this);\r\n    this.firstDayOfMonth = this.firstDayOfMonth.bind(this);\r\n    this.onSave = this.onSave.bind(this);\r\n    this.onClose = this.onClose.bind(this);\r\n    this.onDeleteRemind = this.onDeleteRemind.bind(this);\r\n\r\n    this.lastDayOfMonth = moment(this.state.dateObject)\r\n      .endOf(\"month\")\r\n      .format(\"D\");\r\n  }\r\n\r\n  currentDayF = () => parseInt(this.state.dateObject.format(\"D\"));\r\n  month = () => this.state.dateObject.format(\"MMMM\");\r\n  year = () => this.state.dateObject.format(\"Y\");\r\n  firstDayOfMonth = () =>\r\n    moment(this.state.dateObject).startOf(\"month\").format(\"d\");\r\n\r\n  componentDidMount() {\r\n    this.setState((state, props) => ({\r\n      day: props.day || state.day,\r\n      currentDay: props.currentDay || state.currentDay,\r\n      dateObject: props.dateObject || state.dateObject,\r\n    }));\r\n  }\r\n\r\n  componentWillReceiveProps = (nextProps) => {\r\n    const newReminder = nextProps.addReminder\r\n    if (newReminder.date &&\r\n      newReminder.date.isSame(this.props.fullDate, 'day')) {\r\n      const currentReminder = this.props.addReminder\r\n      const currentReminderIndex = (currentReminder.reminder ? currentReminder.reminder.currentReminder : -1)\r\n      if (newReminder.reminder.currentReminder !== currentReminderIndex) {\r\n        const { reminders } = this.state;\r\n        reminders.push(newReminder.reminder);\r\n        this.setState({\r\n          popperAnchor: null,\r\n          reminders: reminders.sort(\r\n            (r1, r2) => parseFloat(r1.startTime) - parseFloat(r2.startTime)\r\n          ),\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onClick = (event) => {\r\n    this.props.onDayClick(event, this.state.day);\r\n  };\r\n\r\n  onDoubleClick = (event) => {\r\n    this.setState({\r\n      popperAnchor: Boolean(this.popperAnchor) ? null : event.currentTarget,\r\n    });\r\n  };\r\n\r\n  onSave = (reminder) => {\r\n    this.props.createNewReminder(reminder.date, reminder)\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({ popperAnchor: null });\r\n  };\r\n\r\n  onDeleteRemind = (event) => {\r\n    const { reminders } = this.state;\r\n    reminders.splice(event.target.value, 1);\r\n    this.setState({\r\n      reminders: reminders.sort(\r\n        (r1, r2) => parseFloat(r1.startTime) - parseFloat(r2.startTime)\r\n      ),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <td\r\n        key={\"d\" + this.props.day}\r\n        className={`calendar-day ${this.props.currentDay}`}\r\n        onDoubleClick={this.onDoubleClick}\r\n      >\r\n        <span\r\n          key={\"sDay\" + this.props.day}\r\n          onClick={this.onClick}\r\n          className=\"spanDay\"\r\n        >\r\n          {this.state.day}\r\n          <SpringPopper\r\n            anchorEl={this.state.popperAnchor}\r\n            onSave={this.onSave}\r\n            onClose={this.onClose}\r\n            fullDate={this.props.fullDate}\r\n          />\r\n        </span>\r\n        <div className=\"reminds\">\r\n          {this.state.reminders.map((remind, index) => (\r\n            <span\r\n              className={\"spanRemind \" + remind.category}\r\n              key={\"remind\" + index}\r\n            >\r\n              <p className={\"text-reminder\"}>\r\n                <button\r\n                  value={index}\r\n                  className={\"dlt-butt\"}\r\n                  onClick={this.onDeleteRemind}\r\n                >\r\n                  {\"x\"}{\" \"}\r\n                </button>\r\n                {String(remind.text)}\r\n              </p>\r\n              {String(remind.city)}{\" \"}\r\n              <Forecast city={remind.city} date={remind.date} />\r\n              <br />\r\n              {String(remind.startTime)}\r\n              <br />\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </td>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport Day from \"./Day.js\";\r\nimport \"./calendar.css\";\r\n\r\nexport default class Calendar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      dateObject: moment(),\r\n      allMonths: moment.months(),\r\n      selectedDay: moment().date(),\r\n      addReminder: {\r\n        date: null,\r\n        reminder: null,\r\n      },\r\n    };\r\n\r\n    this.weekdaysShortName = moment.weekdaysShort().map((day) => (\r\n      <th key={day} className=\"week-day\">\r\n        {day}\r\n      </th>\r\n    ));\r\n    this.lastDayOfMonth = moment(this.state.dateObject)\r\n      .endOf(\"month\")\r\n      .format(\"D\");\r\n\r\n    // Binding the functions of the component\r\n    this.currentDayF = this.currentDayF.bind(this);\r\n    this.month = this.month.bind(this);\r\n    this.year = this.year.bind(this);\r\n    this.firstDayOfMonth = this.firstDayOfMonth.bind(this);\r\n    this.makeBlanks = this.makeBlanks.bind(this);\r\n    this.makeDays = this.makeDays.bind(this);\r\n    this.makeTableCalendar = this.makeTableCalendar.bind(this);\r\n    this.onDayClick = this.onDayClick.bind(this);\r\n    this.createNewReminder = this.createNewReminder.bind(this);\r\n  }\r\n\r\n  currentDayF = () => parseInt(this.state.dateObject.format(\"D\"));\r\n\r\n  month = () => this.state.dateObject.format(\"MMMM\");\r\n\r\n  year = () => this.state.dateObject.format(\"Y\");\r\n\r\n  firstDayOfMonth = () =>\r\n    moment(this.state.dateObject).startOf(\"month\").format(\"d\");\r\n\r\n  makeBlanks = () => {\r\n    let blanks = [];\r\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\r\n      let d = moment()\r\n        .startOf(\"month\")\r\n        .subtract(i + 1, \"days\")\r\n        .format(\"D\");\r\n      blanks.unshift(\r\n        <td key={\"preBlank\" + i} className=\"calendar-day empty\">\r\n          {d}\r\n        </td>\r\n      );\r\n    }\r\n    return blanks;\r\n  };\r\n\r\n  makeDays = () => {\r\n    let daysInMonth = [];\r\n    for (let day = 1; day <= this.lastDayOfMonth; day++) {\r\n      daysInMonth.push(\r\n        <Day\r\n          key={\"day\" + day}\r\n          day={day}\r\n          currentDay={day === this.state.selectedDay ? \"today\" : \"\"}\r\n          onDayClick={this.onDayClick}\r\n          fullDate={moment({ day: day })}\r\n          createNewReminder={this.createNewReminder}\r\n          addReminder={this.state.addReminder}\r\n        />\r\n      );\r\n    }\r\n    return daysInMonth;\r\n  };\r\n\r\n  makeTableCalendar = () => {\r\n    let totalSlots = [...this.makeBlanks(), ...this.makeDays()];\r\n    let rows = [];\r\n    let week = [];\r\n    totalSlots.forEach((day, index) => {\r\n      if (index % 7 !== 0) {\r\n        week.push(day); // if index not equal 7 that means not go to next week\r\n      } else {\r\n        rows.push(week); // push week array in rows when next week is reached\r\n        week = []; // empty container for next week\r\n        week.push(day); // in current loop we still push current row to new container\r\n      }\r\n      if (index === totalSlots.length - 1) {\r\n        // when end loop we add remain date\r\n        let j = index;\r\n        let afterMonth = 1;\r\n        while (j % 7 !== 6) {\r\n          week.push(\r\n            <td key={\"aftBlank\" + afterMonth} className=\"calendar-day empty\">\r\n              {afterMonth}\r\n            </td>\r\n          );\r\n          j++;\r\n          afterMonth++;\r\n        }\r\n        rows.push(week); // push the final week\r\n      }\r\n    });\r\n    return rows.map((day, index) => <tr key={\"week\" + index}>{day}</tr>);\r\n  };\r\n\r\n  createNewReminder = (date, reminder) => {\r\n    this.setState({\r\n      addReminder: {\r\n        date: moment(date),\r\n        reminder: reminder,\r\n      }\r\n    })\r\n  }\r\n\r\n  onDayClick = (e, d) => {\r\n    this.setState({ selectedDay: d });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calendar-container\">\r\n        <div className=\"calendar-navi\">\r\n          <h2>\r\n            <span className=\"calendar-label\">{this.month()} </span>\r\n            <span className=\"calendar-label\">{this.year()} </span>\r\n          </h2>\r\n        </div>\r\n        <table style={{ width: \"100%\" }}>\r\n          <thead className=\"\">\r\n            <tr>{this.weekdaysShortName}</tr>\r\n          </thead>\r\n          <tbody className=\"\">{this.makeTableCalendar()}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n// import logo from './logo.svg';\r\nimport \"./App.css\";\r\nimport Calendar from \"./components/calendar/\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calendar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: \"\",\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}